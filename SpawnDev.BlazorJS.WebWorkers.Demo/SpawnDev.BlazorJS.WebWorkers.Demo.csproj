<Project Sdk="Microsoft.NET.Sdk.BlazorWebAssembly">

	<PropertyGroup>
		<TargetFramework>net8.0</TargetFramework>
		<Nullable>enable</Nullable>
		<ImplicitUsings>enable</ImplicitUsings>
		<CompressionEnabled>false</CompressionEnabled>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly" Version="8.0.7" />
		<PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly.DevServer" Version="8.0.7" PrivateAssets="all" />
	</ItemGroup>

	<ItemGroup Condition=" '$(Configuration)' == 'Debug' ">
		<ProjectReference Include="..\SpawnDev.BlazorJS.WebWorkers\SpawnDev.BlazorJS.WebWorkers.csproj" />
	</ItemGroup>

	<ItemGroup Condition=" '$(Configuration)' == 'Release' ">
		<PackageReference Include="SpawnDev.BlazorJS.WebWorkers" Version="2.4.5" />
	</ItemGroup>

	<!-- SpawnDev.BlazorJS.WebWorkers config -->
	<PropertyGroup>
		<!-- 
		WebWorkerPatchFramework
		- To run Blazor WASM in non-window scopes (DedicatedWorker, SharedWorker, ServiceWorker) Blazor framework files need to be patched.
		- Patching can be done at runtime in Javascript, or at build time. 
		- Build time patching gives better performance and works with stricter ContentSecurityPolicy rules
		- false - patch at runtime (current default)
		- true  - patch during build (Not currently PWA compatible)
		! NOTE - Not currently compatible with PWA using an asset manifest because some assets are modified and their hash is not currently updated.
		! This will be fixed in a future release.
		-->
		<WebWorkerPatchFramework>true</WebWorkerPatchFramework>
	</PropertyGroup>
</Project>
